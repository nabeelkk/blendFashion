<!DOCTYPE HTML>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>STAG Dashboard - Edit Product</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/adminassets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/adminassets/css/main.css" rel="stylesheet" type="text/css" />
    <!-- Cropper.js CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <style>
        .holder { display: flex; align-items: center; }
        .rad { margin-left: 10px; margin-top: -4px; }
        .error { font-size: 14px; color: red; margin-top: 5px; display: none; }
        .input-upload img { max-width: 100px; margin: 5px; border: 1px solid #661d1d; }
        #cropper-modal {
            display: none; position: fixed; top: 20; left: 20; width: 40%; height: 50%;
            background: rgba(0, 0, 0, 0.7); z-index: 1000; justify-content: center; align-items: center;
        }
        #cropper-modal .cropper-container {
            background: rgb(168, 162, 162); padding: 8px; border-radius: 8px; max-width: 300px; width: 100%;
        }
        .image-container { position: relative; display: inline-block; }
    </style>
</head>
<body>
    <div class="screen-overlay"></div>
     <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="dashboard" class="brand-wrap">
                <img src="/adminassets/imgs/theme/logo.png" class="logo" alt="Evara Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize">
                    <i class="text-muted material-icons md-menu_open"></i>
                </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item">
                    <a class="menu-link" href="/admin/dashboard">
                        <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="#">
                        <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                    <div class="submenu">
                        <a href="/admin/productList">Product List</a>
                        <a href="/admin/productoffer">Product Offer</a>
                        <a href="/admin/categories">Categories</a>
                        <a href="/admin/categoryoffer">Category Offer</a>
                    </div>
                </li>
                <li class="menu-item has-submenu">
                    <a class="menu-link" href="page-orders-1.html">
                        <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                    <div class="submenu">
                        <a href="/admin/orderlist">Order list</a>
                    </div>
                </li>
                <li class="menu-item active">
                    <a class="menu-link" href="/admin/addProducts">
                        <i class="icon material-icons md-add_box"></i>
                        <span class="text">Add product</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/users">
                        <i class="icon material-icons md-person"></i>
                        <span class="text">Users</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/couponList">
                        <i class="icon material-icons md-local_offer"></i>
                        <span class="text">Coupon</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/salesReport">
                        <i class="icon material-icons md-monetization_on"></i>
                        <span class="text">Sales Report</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="page-reviews.html">
                        <i class="icon material-icons md-comment"></i>
                        <span class="text">Reviews</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/brand">
                        <i class="icon material-icons md-stars"></i>
                        <span class="text">Brands</span>
                    </a>
                </li>
            </ul>
            <br>
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
        <section class="content-main">
            <div class="row">
                <div class="col-9">
                    <div class="content-header">
                        <h2 class="content-title">Edit Product</h2>
                    </div>
                </div>
                <!-- Basic Information -->
                <div class="col-lg-12">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Basic</h4>
                        </div>
                        <div class="card-body">
                            <form method="post" action="/admin/editProduct/<%= product._id %>" id="pdtform" enctype="multipart/form-data">
                                <div style="display: flex; justify-content: space-between; gap: 20px;">
                                    <div class="mb-4" style="width: 50%;">
                                        <label for="pdtname" class="form-label">Product Name</label>
                                        <input type="text" name="name" placeholder="Type here" class="form-control" id="pdtname" value="<%= product.name %>">
                                        <p id="error-name" class="error">Product name is required and must be 3-50 characters (letters, numbers, spaces only).</p>
                                    </div>
                                    <div class="mb-4" style="width: 50%;">
                                        <label class="form-label">Category</label>
                                        <select name="category" class="form-select" id="product_category">
                                            <option value="">Select a category</option>
                                            <% category.forEach(element => { %>
                                                <option value="<%= element._id %>" <%= element._id.toString() === product.category.toString() ? 'selected' : '' %>><%= element.name %></option>
                                            <% }) %>
                                        </select>
                                        <p id="error-category" class="error">Please select a category.</p>
                                    </div>
                                </div>
                                <div class="mb-4 col-md-6">
                                    <label class="form-label">Brand</label>
                                    <select name="brand" class="form-select" id="brand">
                                        <% brand.forEach(element => { %>
                                            <option value="<%= element.name %>" <%= element.name === product.brand ? 'selected' : '' %>><%= element.name %></option>
                                        <% }) %>
                                    </select>
                                    <p id="error-brand" class="error">Please select a brand.</p>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Description</label>
                                    <textarea placeholder="Type here" name="description" id="pdtdes" class="form-control" rows="4"><%= product.description %></textarea>
                                    <p id="error-description" class="error">Description is required and must be 10-500 characters.</p>
                                </div>
                        </div>
                    </div>
                </div>
                <!-- Size Sections -->
                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Small</h4>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div>
                                    <div class="mb-3">
                                        <label for="MaxPriceSmall">MRP</label>
                                        <input placeholder="MRP" id="MaxPriceSmall" name="MaxPriceSmall" type="number" min="0" class="form-control" value="<%= product.sizes.small ? product.sizes.small.Mrp : '' %>">
                                        <p id="error-mrp-small" class="error">MRP must be a positive number.</p>
                                    </div>
                                    <div class="mb-3">
                                        <label for="SalesPriceSmall">Sales Price</label>
                                        <input placeholder="Sales Price" id="SalesPriceSmall" name="SalesPriceSmall" type="number" min="0" class="form-control" value="<%= product.sizes.small ? product.sizes.small.amount : '' %>">
                                        <p id="error-sales-small" class="error">Sales Price must be a positive number and not greater than MRP.</p>
                                    </div>
                                    <div class="mb-3">
                                        <label for="StockSmall">Stock</label>
                                        <input placeholder="Stock" id="StockSmall" name="StockSmall" type="number" min="0" class="form-control" value="<%= product.sizes.small ? product.sizes.small.quantity : '' %>">
                                        <p id="error-stock-small" class="error">Stock must be a non-negative integer.</p>
                                    </div>
                                </div>
                                <p id="error-size-small" class="error">Please provide valid MRP, Sales Price, and Stock for Small size.</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Medium</h4>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div>
                                    <div class="mb-3">
                                        <label for="MaxPriceMedium">MRP</label>
                                        <input placeholder="MRP" id="MaxPriceMedium" name="MRPMedium" type="number" min="0" class="form-control" value="<%= product.sizes.medium ? product.sizes.medium.Mrp : '' %>">
                                        <p id="error-mrp-medium" class="error">MRP must be a positive number.</p>
                                    </div>
                                    <div class="mb-3">
                                        <label for="SalesPriceMedium">Sales Price</label>
                                        <input placeholder="Sales Price" id="SalesPriceMedium" name="SalesPriceMedium" type="number" min="0" class="form-control" value="<%= product.sizes.medium ? product.sizes.medium.amount : '' %>">
                                        <p id="error-sales-medium" class="error">Sales Price must be a positive number and not greater than MRP.</p>
                                    </div>
                                    <div class="mb-3">
                                        <label for="StockMedium">Stock</label>
                                        <input placeholder="Stock" id="StockMedium" name="StockMedium" type="number" min="0" class="form-control" value="<%= product.sizes.medium ? product.sizes.medium.quantity : '' %>">
                                        <p id="error-stock-medium" class="error">Stock must be a non-negative integer.</p>
                                    </div>
                                </div>
                                <p id="error-size-medium" class="error">Please provide valid MRP, Sales Price, and Stock for Medium size.</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Large</h4>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div>
                                    <div class="mb-3">
                                        <label for="MaxPriceLarge">MRP</label>
                                        <input placeholder="MRP" id="MaxPriceLarge" name="MRPLarge" type="number" min="0" class="form-control" value="<%= product.sizes.large ? product.sizes.large.Mrp : '' %>">
                                        <p id="error-mrp-large" class="error">MRP must be a positive number.</p>
                                    </div>
                                    <div class="mb-3">
                                        <label for="SalesPriceLarge">Sales Price</label>
                                        <input placeholder="Sales Price" id="SalesPriceLarge" name="SalesPriceLarge" type="number" min="0" class="form-control" value="<%= product.sizes.large ? product.sizes.large.amount : '' %>">
                                        <p id="error-sales-large" class="error">Sales Price must be a positive number and not greater than MRP.</p>
                                    </div>
                                    <div class="mb-3">
                                        <label for="StockLarge">Stock</label>
                                        <input placeholder="Stock" id="StockLarge" name="StockLarge" type="number" min="0" class="form-control" value="<%= product.sizes.large ? product.sizes.large.quantity : '' %>">
                                        <p id="error-stock-large" class="error">Stock must be a non-negative integer.</p>
                                    </div>
                                </div>
                                <p id="error-size-large" class="error">Please provide valid MRP, Sales Price, and Stock for Large size.</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>XL</h4>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div>
                                    <div class="mb-3">
                                        <label for="MaxPriceXl">MRP</label>
                                        <input placeholder="MRP" id="MaxPriceXl" name="MRPXL" type="number" min="0" class="form-control" value="<%= product.sizes.XL.Mrp? product.sizes.XL.Mrp : '' %>">
                                        <p id="error-mrp-xl" class="error">MRP must be a positive number.</p>
                                    </div>
                                    <div class="mb-3">
                                        <label for="SalesPriceXl">Sales Price</label>
                                        <input placeholder="Sales Price" id="SalesPriceXl" name="SalesPriceXL" type="number" min="0" class="form-control" value="<%= product.sizes.XL.amount ? product.sizes.XL.amount : '' %>">
                                        <p id="error-sales-xl" class="error">Sales Price must be a positive number and not greater than MRP.</p>
                                    </div>
                                    <div class="mb-3">
                                        <label for="StockXl">Stock</label>
                                        <input placeholder="Stock" id="StockXl" name="StockXL" type="number" min="0" class="form-control" value="<%= product.sizes.XL ? product.sizes.XL.quantity : '' %>">
                                        <p id="error-stock-xl" class="error">Stock must be a non-negative integer.</p>
                                    </div>
                                </div>
                                <p id="error-size-xl" class="error">Please provide valid MRP, Sales Price, and Stock for XL size.</p>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Media Section -->
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Media</h4>
                        </div>
                        <div class="card-body">
                            <div style="display: flex; flex-wrap: wrap; gap: 10px;">
                                <% if (product.images && product.images.length > 0) { %>
                                    <% product.images.forEach((image, index) => { %>
                                        <div class="image-container" id="image-container-<%= index %>">
                                            <img id="image-prev-<%= index %>" src="https://res.cloudinary.com/<%= cloudName %>/image/upload/<%= image %>" style="max-width: 100px; margin: 5px;" alt="Product Image">
                                            <button class="btn btn-warning" type="button" onclick="replaceImage('<%= index %>')">Replace</button>
                                            <div id="replace-input-<%= index %>" style="display: none;">
                                                <input type="file" id="replace-file-<%= index %>" name="replaceImage[<%= index %>]" accept="image/jpeg,image/png,image/webp" onchange="openCropper('<%= index %>', this)">
                                                <p id="error-replace-<%= index %>" class="error"></p>
                                            </div>
                                        </div>
                                    <% }) %>
                                <% } %>
                            </div>
                            <div class="input-upload">
                                <div id="newImagePreviewContainer" style="display: flex; flex-wrap: wrap; gap: 10px;"></div>
                                <!-- <input name="newImages" id="newImageInput" class="form-control" type="file" multiple accept="image/jpeg,image/png,image/webp"> -->
                                <p id="error-new-images" class="error">Please upload up to 3 new images (JPEG/PNG/WebP, max 5MB each).</p>
                            </div>
                        </div>
                    </div>
                    <!--  -->
                    <div class="d-grid col-lg-6">
                        <button type="submit" class="btn btn-primary">Update Product</button>
                    </div>
                </div>
                </form>
                <!-- Cropping Modal -->
                <div id="cropper-modal">
                    <div class="cropper-container">
                        <h3>Crop Image</h3>
                        <img id="cropper-image" style="max-width: 100%;">
                        <div style="margin-top: 10px;">
                            <button type="button" class="btn btn-primary" onclick="cropImage()">Crop</button>
                            <button type="button" class="btn btn-secondary" onclick="closeCropper()">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>document.write(new Date().getFullYear())</script> ©, STAG MEN FASHION.
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">All rights reserved</div>
                </div>
            </div>
        </footer>
    </main>
    <script src="/adminassets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/adminassets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/adminassets/js/vendors/select2.min.js"></script>
    <script src="/adminassets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/adminassets/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <script src="/adminassets/js/main.js" type="text/javascript"></script>
    <script>
        let cropper;
        let croppedFiles = [];
        let filesToCrop = [];
        let currentFileIndex = 0;
        let isReplacing = false;
        let replaceIndex;

        const newImageInput = document.getElementById('newImageInput');
        const newImagePreviewContainer = document.getElementById('newImagePreviewContainer');
        const form = document.getElementById('pdtform');

        $(document).ready(function() {
            $('#product_category').select2();
            $('#brand').select2();
        });

        // Handle new image uploads
        newImageInput.addEventListener('change', (event) => {
            isReplacing = false;
            newImagePreviewContainer.innerHTML = '';
            croppedFiles = [];
            filesToCrop = Array.from(event.target.files);
            const errorNewImages = document.getElementById('error-new-images');

            if (filesToCrop.length > 3) {
                errorNewImages.textContent = 'You can upload a maximum of 3 new images.';
                errorNewImages.style.display = 'block';
                newImageInput.value = '';
                filesToCrop = [];
                return;
            }

            for (let file of filesToCrop) {
                if (!file.type.match('image/(jpeg|png|webp)')) {
                    errorNewImages.textContent = 'Only JPEG, PNG, or WebP images are allowed.';
                    errorNewImages.style.display = 'block';
                    newImageInput.value = '';
                    filesToCrop = [];
                    return;
                }
                if (file.size > 5 * 1024 * 1024) {
                    errorNewImages.textContent = 'Each image must be less than 5MB.';
                    errorNewImages.style.display = 'block';
                    newImageInput.value = '';
                    filesToCrop = [];
                    return;
                }
            }

            errorNewImages.style.display = 'none';
            if (filesToCrop.length > 0) {
                currentFileIndex = 0;
                cropNextImage();
            }
        });

        function replaceImage(index) {
            isReplacing = true;
            replaceIndex = index;
            document.getElementById(`image-prev-${index}`).style.display = 'none';
            document.getElementById(`image-container-${index}`).querySelector('button').style.display = 'none';
            document.getElementById(`replace-input-${index}`).style.display = 'block';
        }

        function openCropper(index, input) {
            const file = input.files[0];
            if (file) {
                const errorElement = document.getElementById(`error-replace-${index}`);
                if (!file.type.match('image/(jpeg|png|webp)')) {
                    errorElement.textContent = 'Only JPEG, PNG, or WebP images are allowed.';
                    errorElement.style.display = 'block';
                    input.value = '';
                    return;
                }
                if (file.size > 5 * 1024 * 1024) {
                    errorElement.textContent = 'Image must be less than 5MB.';
                    errorElement.style.display = 'block';
                    input.value = '';
                    return;
                }

                filesToCrop = [file];
                currentFileIndex = 0;
                replaceIndex = index;
                cropNextImage();
            }
        }

        function cropNextImage() {
            if (currentFileIndex >= filesToCrop.length) {
                if (!isReplacing) updateNewImageInput();
                return;
            }

            const file = filesToCrop[currentFileIndex];
            const reader = new FileReader();
            reader.onload = (e) => {
                const cropperImage = document.getElementById('cropper-image');
                cropperImage.src = e.target.result;
                document.getElementById('cropper-modal').style.display = 'flex';

                if (cropper) cropper.destroy();
                cropper = new Cropper(cropperImage, {
                    aspectRatio: 1,
                    viewMode: 1,
                    autoCropArea: 0.8,
                    minCropBoxWidth: 200,
                    minCropBoxHeight: 200,
                    movable: true,
                    zoomable: true,
                    scalable: true,
                    background: false,
                });
            };
            reader.readAsDataURL(file);
        }

        function cropImage() {
            if (cropper) {
                cropper.getCroppedCanvas({
                    width: 600,
                    height: 600,
                    imageSmoothingQuality: 'high',
                }).toBlob((blob) => {
                    const croppedFile = new File([blob], `cropped-${currentFileIndex}.jpg`, { type: 'image/jpeg' });
                    if (isReplacing) {
                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(croppedFile);
                        document.getElementById(`replace-file-${replaceIndex}`).files = dataTransfer.files;
                        const img = document.createElement('img');
                        img.src = URL.createObjectURL(croppedFile);
                        img.style.maxWidth = '100px';
                        img.style.margin = '5px';
                        document.getElementById(`replace-input-${replaceIndex}`).prepend(img);
                    } else {
                        croppedFiles.push(croppedFile);
                    }
                    currentFileIndex++;
                    closeCropper();
                    cropNextImage();
                }, 'image/jpeg', 0.9);
            }
        }

        function closeCropper() {
            document.getElementById('cropper-modal').style.display = 'none';
            if (cropper) {
                cropper.destroy();
                cropper = null;
            }
        }

        function updateNewImageInput() {
            const dataTransfer = new DataTransfer();
            croppedFiles.forEach(file => dataTransfer.items.add(file));
            newImageInput.files = dataTransfer.files;

            newImagePreviewContainer.innerHTML = '';
            croppedFiles.forEach((file, index) => {
                const reader = new FileReader();
                reader.onload = (e) => {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.alt = `Cropped Image ${index + 1}`;
                    img.style.cursor = 'pointer';
                    img.title = 'Click to re-crop';
                    img.onclick = () => reCropImage(index);
                    newImagePreviewContainer.appendChild(img);
                };
                reader.readAsDataURL(file);
            });
        }

        function reCropImage(index) {
            currentFileIndex = index;
            filesToCrop = [croppedFiles[index]];
            croppedFiles.splice(index, 1);
            cropNextImage();
        }

        // Form Validation
        form.addEventListener('submit', (e) => {

            if (validateForm()) {
                form.submit();
            }
        });

        function validateForm() {
            let isValid = true;
            clearErrors();

            const pdtName = document.getElementById('pdtname').value.trim();
            const nameRegex = /^[a-zA-Z0-9\s]{3,50}$/;
            if (!pdtName || !nameRegex.test(pdtName)) {
                showError('error-name', 'Product name is required and must be 3-50 characters (letters, numbers, spaces only).');
                isValid = false;
            }

            const category = document.getElementById('product_category').value;
            if (!category) {
                showError('error-category', 'Please select a category.');
                isValid = false;
            }

            const brand = document.getElementById('brand').value;
            if (!brand) {
                showError('error-brand', 'Please select a brand.');
                isValid = false;
            }

            const description = document.getElementById('pdtdes').value.trim();
            if (!description || description.length < 10 || description.length > 500) {
                showError('error-description', 'Description is required and must be 10-500 characters.');
                isValid = false;
            }

            const sizes = ['small', 'medium', 'large', 'xl'];
            let atLeastOneSizeValid = false;

            sizes.forEach(size => {
                const capitalizedSize = size.charAt(0).toUpperCase() + size.slice(1).toLowerCase();
                const mrpElement = document.getElementById(`MaxPrice${capitalizedSize}`);
                const salesElement = document.getElementById(`SalesPrice${capitalizedSize}`);
                const stockElement = document.getElementById(`Stock${capitalizedSize}`);

                const mrp = mrpElement.value;
                const sales = salesElement.value;
                const stock = stockElement.value;

                let sizeValid = true;

                if (mrp || sales || stock) {
                    if (!mrp || isNaN(mrp) || mrp <= 0) {
                        showError(`error-mrp-${size}`, 'MRP must be a positive number.');
                        sizeValid = false;
                    }
                    if (!sales || isNaN(sales) || sales <= 0) {
                        showError(`error-sales-${size}`, 'Sales Price must be a positive number.');
                        sizeValid = false;
                    } else if (parseFloat(sales) > parseFloat(mrp)) {
                        showError(`error-sales-${size}`, 'Sales Price cannot be greater than MRP.');
                        sizeValid = false;
                    }
                    if (!stock || isNaN(stock) || stock < 0 || !Number.isInteger(parseFloat(stock))) {
                        showError(`error-stock-${size}`, 'Stock must be a non-negative integer.');
                        sizeValid = false;
                    }

                    if (!sizeValid) {
                        showError(`error-size-${size}`, `Please provide valid MRP, Sales Price, and Stock for ${capitalizedSize} size.`);
                        isValid = false;
                    } else {
                        atLeastOneSizeValid = true;
                    }
                }
            });

            if (!atLeastOneSizeValid) {
                sizes.forEach(size => {
                    showError(`error-size-${size}`, 'At least one size must have valid MRP, Sales Price, and Stock.');
                });
                isValid = false;
            }

            return isValid;
        }

        function showError(id, message) {
            const errorElement = document.getElementById(id);
            errorElement.textContent = message;
            errorElement.style.display = 'block';
        }

        function clearErrors() {
            document.querySelectorAll('.error').forEach(error => {
                error.style.display = 'none';
                error.textContent = '';
            });
        }
    </script>
</body>
</html>