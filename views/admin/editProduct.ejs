<!DOCTYPE HTML>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>STAG Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/adminassets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/adminassets/css/main.css" rel="stylesheet" type="text/css" />
    <!-- Cropper.js CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
</head>

<body>
    <style>
        .holder {
            display: flex;
            align-items: center;
        }
        .rad {
            margin-left: 10px;
            margin-top: -4px;
        }
        #imageRemoveBtn {
            padding: 5px;
            font-size: 13px;
            border: 1px solid #088178;
            color: white;
            background: #088178;
            margin-top: 35px;
            margin-left: -84px;
        }
    </style>
    <div class="screen-overlay"></div>
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="dashboard" class="brand-wrap">
                <img src="/adminassets/imgs/theme/logo.png" class="logo" alt="Evara Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i>
                </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item ">
                    <a class="menu-link" href="dashboard"> <i class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <li class="menu-item has-submenu">
                    <a class="menu-link" href=""> <i class="icon material-icons md-shopping_bag"></i>
                        <span class="text">Products</span>
                    </a>
                    <div class="submenu">
                        <a href="productList" class="active"> Product List</a>
                        <a href="productoffer">Product Offer</a>
                        <a href="categories">Categories</a>
                        <a href="categoryoffer">Category Offer</a>
                    </div>
                </li>
                <li class="menu-item has-submenu ">
                    <a class="menu-link" href="page-orders-1.html"> <i class="icon material-icons md-shopping_cart"></i>
                        <span class="text">Orders</span>
                    </a>
                    <div class="submenu">
                        <a href="orderlist">Order list </a>
                    </div>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="addProducts"> <i class="icon material-icons md-add_box"></i>
                        <span class="text">Add product</span>
                    </a>
                </li>
                <li class="menu-item ">
                    <a class="menu-link" href="users"> <i class="icon material-icons md-person"></i>
                        <span class="text">Users</span> 
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="couponList"> <i class="icon material-icons md-local_offer"></i>
                        <span class="text">Coupon</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="salesReport"> <i class="icon material-icons md-monetization_on"></i>
                        <span class="text">Sales Report</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="page-reviews.html"> <i class="icon material-icons md-comment"></i>
                        <span class="text">Reviews</span>
                    </a>
                </li> 
                <li class="menu-item">
                    <a class="menu-link" href="brand"> <i class="icon material-icons md-stars"></i>
                        <span class="text">Brands</span> </a>
                </li>
            </ul>
            <br>
            <br>
        </nav>
    </aside>
    <main class="main-wrap">
        <header class="main-header navbar">
            <div class="col-search">
                <form class="searchform">
                    <div class="input-group">
                        <input list="search_terms" type="text" class="form-control" placeholder="Search term">
                        <button class="btn btn-light bg" type="button"> <i class="material-icons md-search"></i></button>
                    </div>
                </form>
            </div>
            <div class="col-nav">
                <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside"> <i class="material-icons md-apps"></i> </button>
                <ul class="nav">
                    <li class="dropdown nav-item">
                        <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount" aria-expanded="false"> <img class="img-xs rounded-circle" src="/adminassets/imgs/people/avtar.png" alt="User"></a>
                        <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                            <a class="dropdown-item" href="#"><i class="material-icons md-perm_identity"></i>Edit Profile</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-settings"></i>Account Settings</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-account_balance_wallet"></i>Wallet</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-receipt"></i>Billing</a>
                            <a class="dropdown-item" href="#"><i class="material-icons md-help_outline"></i>Help center</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item text-danger" href="/admin/logout"><i class="material-icons md-exit_to_app"></i>Logout</a>
                        </div>
                    </li>
                </ul>
            </div>
        </header>
        <section class="content-main">
            <div class="row">
                <div class="col-9">
                    <div class="content-header">
                        <h2 class="content-title">Edit Product</h2>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="card mb-4">
                        <div class="card-header">
                            <h4>Basic</h4>
                        </div>
                        <div class="card-body">
                            <form method="post" action="/admin/editProduct/<%= product._id %>" id="pdtform" enctype="multipart/form-data">
                                <div class="mb-4">
                                    <label for="product_name" class="form-label">Product Name</label>
                                    <input type="text" name="name" placeholder="Type here" value="<%= product.name %>" class="form-control" id="pdtname">
                                    <p id="error1" style="display: none; color: red;"></p>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Description</label>
                                    <textarea placeholder="Type here" name="description" id="pdtdes" class="form-control" rows="4"><%= product.description %></textarea>
                                    <p id="error2" style="display: none; color: red;"></p>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Category</label>
                                    <select name="category" class="form-select" id="product_category">
                                        <% category.forEach(element => { %> 
                                            <option value="<%= element._id %>"><%= element.name %></option>
                                        <% }) %>
                                    </select>
                                </div>
                                <div class="mb-4">
                                    <label class="form-label">Brand</label>
                                    <select name="brand" class="form-select" id="brand">
                                        <option value="<%= product.brand %>">Brand</option>
                                    </select>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Sales price</label>
                                            <input placeholder=" " id="saleprice" name="salesPrice" type="text" value="<%= product.price.seller %>" class="form-control">
                                            <p id="error4" style="display: none; color: red;"></p>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Small</label>
                                            <div class="row gx-2">
                                                <input placeholder="Price" id="small" name="small" value="<%= product.sizes.small.amount %>" type="text" class="form-control">
                                                <input placeholder="" id="smallQuantity" name="smallQuantity" value="<%= product.sizes.small.quantity %>" type="text" class="form-control mt-2">
                                                <p id="error3" style="display: none; color: red;"></p>
                                                <p id="error8" style="display: none; color: red;"></p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Medium</label>
                                            <input placeholder="Price" id="medium" name="medium" type="text" value="<%= product.sizes.medium.amount %>" class="form-control">
                                            <input placeholder="" id="medium" name="mediumQuantity" type="text" value="<%= product.sizes.medium.quantity %>" class="form-control mt-2">
                                            <p id="error4" style="display: none; color: red;"></p>
                                        </div>
                                    </div>
                                    <div class="col-lg-4">
                                        <div class="mb-4">
                                            <label class="form-label">Large</label>
                                            <input placeholder="Price" id="large" name="large" type="text" value="<%= product.sizes.large.amount %>" class="form-control">
                                            <input placeholder="Price" id="largeQuantity" name="largeQuantity" type="text" value="<%= product.sizes.large.quantity %>" class="form-control mt-2">
                                            <p id="error4" style="display: none; color: red;"></p>
                                        </div>
                                    </div>
                                    <div class="d-grid">
                                        <button type="submit" class="btn btn-primary" onclick="debugForm()">update</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h4>Media</h4>
                            </div>
                            <div class="card-body">
                                <div style="display: flex; flex-wrap: wrap; gap: 10px;">
                                    <% if (product.images && product.images.length > 0) { %>
                                      <% product.images.forEach((image, index) => { %>
                                        <div id="image-container-<%= index %>" class="image-container">
                                          <img id="image-prev-<%= index %>" src="https://res.cloudinary.com/<%= cloudName %>/image/upload/<%= image %>" style="max-width: 100px; margin: 5px;" alt="Product Image">
                                          <button class="btn btn-warning" type="button" onclick="replaceImage('<%= index %>', '<%= image %>')">Replace</button>
                                          <div id="replace-input-<%= index %>" style="display: none;">
                                            <input type="file" id="replace-file-<%= index %>" name="replaceImage[<%= index %>]" accept="image/*" onchange="openCropper('<%= index %>', this)">
                                            <p id="error-<%= index %>" style="display: none; color: red;"></p>
                                          </div>
                                        </div>
                                      <% }) %>
                                    <% } else { %>
                                      <p>No images available.</p>
                                    <% } %>
                                </div>
                                <!-- <div class="input-upload">
                                    <div id="imagePreviewContainer" style="display: flex; flex-wrap: wrap; gap: 10px;"></div>
                                    <input name="image" id="imageInput" class="form-control" type="file" multiple>
                                    <p id="error9" style="display: none; color: red;"></p>
                                </div> -->
                            </div>
                        </div>
                    </div>
                </form>
                <!-- Cropping Modal -->
                <div id="cropper-modal" style="display: none; position: fixed; top: 0; left: 0; width: 120%; height: 100%; background: rgba(0,0,0,0.5); z-index: 100;">
                    <div style="background: white; margin: 1% auto; padding: 20px; width: 120%; max-width: 300px;">
                        <h3>Crop Image</h3>
                        <img id="cropper-image" style="max-width: 80%;">
                        <div style="margin-top: 10px;">
                            <button type="button" class="btn btn-primary" onclick="cropImage()">Crop</button>
                            <button type="button" class="btn btn-secondary" onclick="closeCropper()">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <footer class="main-footer font-xs">
            <div class="row pb-30 pt-15">
                <div class="col-sm-6">
                    <script>
                    document.write(new Date().getFullYear())
                    </script> ©, STAG MEN FASHION .
                </div>
                <div class="col-sm-6">
                    <div class="text-sm-end">
                        All rights reserved
                    </div>
                </div>
            </div>
        </footer>
    </main>
    <script src="/adminassets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/adminassets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="/adminassets/js/vendors/select2.min.js"></script>
    <script src="/adminassets/js/vendors/perfect-scrollbar.js"></script>
    <script src="/adminassets/js/vendors/jquery.fullscreen.min.js"></script>
    <!-- Cropper.js Script -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
    <!-- Main Script -->
    <script src="/adminassets/js/main.js" type="text/javascript"></script>
    
    <script>
        let cropper;
        let currentIndex;

        function replaceImage(index, imageUrl) {
            const imagePrev = document.getElementById(`image-prev-${index}`);
            const replaceButton = document.getElementById(`image-container-${index}`)?.querySelector('button');
            const replaceInput = document.getElementById(`replace-input-${index}`);

            if (!imagePrev || !replaceButton || !replaceInput) {
                console.error('Missing elements:', {
                    imagePrev: !imagePrev,
                    replaceButton: !replaceButton,
                    replaceInput: !replaceInput,
                });
                return;
            }

            imagePrev.style.display = 'none';
            replaceButton.style.display = 'none';
            replaceInput.style.display = 'block';

            const hiddenInput = document.createElement('input');
            hiddenInput.type = 'hidden';
            hiddenInput.name = 'removeImages[]';
            hiddenInput.value = imageUrl;
            hiddenInput.id = `remove-image-${index}`;
            document.getElementById(`image-container-${index}`).appendChild(hiddenInput);
  
        }

        function openCropper(index, input) {
            const file = input.files[0];
            if (file) {
                if (!file.type.startsWith('image/')) {
                    document.getElementById(`error-${index}`).style.display = 'block';
                    document.getElementById(`error-${index}`).textContent = 'Please upload an image file.';
                    input.value = '';
                    return;
                }
                if (file.size > 5 * 1024 * 1024) {
                    document.getElementById(`error-${index}`).style.display = 'block';
                    document.getElementById(`error-${index}`).textContent = 'Image size must be less than 5MB.';
                    input.value = '';
                    return;
                }

                currentIndex = index;
                const reader = new FileReader();
                reader.onload = (e) => {
                    const cropperImage = document.getElementById('cropper-image');
                    cropperImage.src = e.target.result;
                    document.getElementById('cropper-modal').style.display = 'block';

                    if (cropper) {
                        cropper.destroy();
                    }
                    cropper = new Cropper(cropperImage, {
                        aspectRatio: 1, 
                        viewMode: 1,
                        autoCropArea: 0.8,
                        movable: true,
                        zoomable: true,
                        scalable: true,
                    });
                };
                reader.readAsDataURL(file);
                document.getElementById(`error-${index}`).style.display = 'none';
            }
        }

        function cropImage() {
            if (cropper) {
                cropper.getCroppedCanvas({
                    width: 600,
                    height: 600,
                }).toBlob((blob) => {
                    const previewContainer = document.getElementById(`replace-input-${currentIndex}`);
                    const img = document.createElement('img');
                    img.src = URL.createObjectURL(blob);
                    img.style.maxWidth = '100px';
                    img.style.margin = '5px';
                    previewContainer.prepend(img);

                    // Create a File object from the blob
                    const croppedFile = new File([blob], `cropped-${currentIndex}.jpg`, { type: 'image/jpeg' });
                    const dataTransfer = new DataTransfer();
                    dataTransfer.items.add(croppedFile);
                    document.getElementById(`replace-file-${currentIndex}`).files = dataTransfer.files;

                    closeCropper();
                }, 'image/jpeg', 0.8);
            }
        }

        function closeCropper() {
            document.getElementById('cropper-modal').style.display = 'none';
            if (cropper) {
                cropper.destroy();
                cropper = null;
            }
        }

        function previewNewImage(index, input) {
            // This function is no longer used since cropping replaces it
        }

        const imageInput = document.getElementById('imageInput');
        const imagePreviewContainer = document.getElementById('imagePreviewContainer');

        if (imageInput && imagePreviewContainer) {
            imageInput.addEventListener('change', (event) => {
                imagePreviewContainer.innerHTML = '';
                const files = event.target.files;
                if (files.length > 3) {
                    document.getElementById('error9').style.display = 'block';
                    document.getElementById('error9').textContent = 'You can upload a maximum of 3 images.';
                    imageInput.value = '';
                    return;
                }
                for (const file of files) {
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.style.maxWidth = '100px';
                        img.style.margin = '5px';
                        imagePreviewContainer.appendChild(img);
                    };
                    reader.readAsDataURL(file);
                }
                document.getElementById('error9').style.display = 'none';
            });
        }

        function debugForm() {
            const form = document.querySelector('form');
            const formData = new FormData(form);
  
            for (const [key, value] of formData.entries()) {
                console.log(`${key}:`, value instanceof File ? value.name : value);
            }
        }

        const pdtname = document.getElementById('pdtname');
        const pdtdes = document.getElementById('pdtdes');
        const regprice = document.getElementById('regprice');
        const saleprice = document.getElementById('saleprice');
        const squantity = document.getElementById('squantity');
        const mquantity = document.getElementById('mquantity');
        const lquantity = document.getElementById('lquantity');
        const image = document.getElementById('imageInput');
        const img = document.getElementById('imagePreviewContainer');

        const error1 = document.getElementById('error1');
        const error2 = document.getElementById('error2');
        const error3 = document.getElementById('error3');
        const error4 = document.getElementById('error4');
        const error5 = document.getElementById('error5');
        const error6 = document.getElementById('error6');
        const error7 = document.getElementById('error7');
        const error8 = document.getElementById('error8');
        const error9 = document.getElementById('error9');

        const pdtform = document.getElementById('pdtform');

        function validateProduct(e) {
            const nameval = pdtname.value;
            const namePattern = /^[a-zA-Z][a-zA-Z]*$/;
            if (nameval === "") {
                error1.style.display = "block";
                error1.innerHTML = "Please Enter a valid name.";
            } else if (namePattern.test(nameval)) {
                error1.style.display = "block";
                error1.innerHTML = "Invalid format for the Name. First letter should be capital.";
            } else {
                error1.style.display = "none";
                error1.innerHTML = "";
            }
        }

        function validatePdtdes(e) {
            const catdesval = pdtdes.value.trim();
            if (catdesval === "") {
                error2.style.display = 'block';
                error2.innerHTML = 'description is required';
            } else {
                error2.style.display = 'none';
                error2.innerHTML = '';
            }
        }

        function validateRegPrice(e) {
            const regPval = regprice.value;
            const rpPattern = /^(?!-)\d+$/;
            if (!rpPattern.test(regPval)) {
                error3.style.display = 'block';
                error3.innerHTML = 'Invalid!!';
            } else {
                error3.style.display = 'none';
                error3.innerHTML = '';
            }
        }

        function validateSalePrice(e) {
            const salePval = saleprice.value;
            const spPattern = /^(?!-)\d+$/;
            if (!spPattern.test(salePval)) {
                error4.style.display = 'block';
                error4.innerHTML = 'Invalid!!';
            } else {
                error4.style.display = 'none';
                error4.innerHTML = '';
            }
        }

        let isChecked = false;
        if (mquantity) {
            mquantity.addEventListener('click', (e) => {
                if (isChecked) {
                    mquantity.checked = false;
                    isChecked = false;
                } else {
                    isChecked = true;
                }
            });
        }

        let sisChecked = false;
        if (squantity) {
            squantity.addEventListener('click', (e) => {
                if (sisChecked) {
                    squantity.checked = false;
                    sisChecked = false;
                } else {
                    sisChecked = true;
                }
            });
        }

        let lisChecked = false;
        if (lquantity) {
            lquantity.addEventListener('click', (e) => {
                if (lisChecked) {
                    lquantity.checked = false;
                    lisChecked = false;
                } else {
                    lisChecked = true;
                }
            });
        }

        function validateBothPrice(e) {
            const regularP = parseFloat(regprice.value);
            const saleP = parseFloat(saleprice.value);
            if (regularP < saleP) {
                error8.style.display = 'block';
                error8.innerHTML = 'Regular price must be greater than sale price';
            } else {
                error8.style.display = 'none';
                error8.innerHTML = '';
            }
        }

        if (pdtname) pdtname.addEventListener('blur', validateProduct);
        if (pdtdes) pdtdes.addEventListener('blur', validatePdtdes);
        if (regprice) {
            regprice.addEventListener('blur', validateRegPrice);
            regprice.addEventListener('blur', validateBothPrice);
        }
        if (saleprice) saleprice.addEventListener('blur', validateSalePrice);

        if (pdtform) {
            pdtform.addEventListener('submit', function (e) {
                validateProduct();
                validatePdtdes();
                validateRegPrice();
                validateSalePrice();
                validateBothPrice();

                if (error1.innerHTML || error2.innerHTML || error3.innerHTML || error4.innerHTML || error5.innerHTML || error6.innerHTML || error7.innerHTML || error8.innerHTML || error9.innerHTML) {
                    e.preventDefault();
                }
            });
        }
    </script>
</body>
</html>