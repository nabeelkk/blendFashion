<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Failed | The Style</title>
    <link rel="stylesheet" href="css/style1.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <style>
        a{
            text-decoration: none;
            color: black;
        }
    </style>
</head>
<body>
    <%- include('../partials/navbar') %>
    <div class="container mb-5" style="text-align: center;">
        <h1 style="margin-top: 50px;">Payment Failed</h1>
        <p>Sorry, your payment could not be processed. Please try again.</p>
        <img class="mt-5 mb-5" src="https://tse3.mm.bing.net/th?id=OIP.QaDO6hbBNDInHbKPMB_dzgHaEz&pid=Api&P=0&h=180" alt="Failure Illustration">
        <div class="mt-4">
            <a id="razorpay-checkout-button" onclick="retryPayment('<%=order._id%>')" class="btn btn-dark">Retry Payment</a>
            <a href="/myOrder" class="btn btn-outline-dark">View Order Details</a>
        </div>
    </div>
    <input type="hidden" name="default-address" id="default-address" value="<%=defaultAddressId %>">
    <input type="hidden"  id="total-price" value="<%=totalPrice %>">
     <input type="hidden" id="cart" value="<%= cart %>">
    <%- include('../partials/footer') %>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
                async function retryPayment(retryOrderId) {
                    try {
                        const defaultAddress = document.getElementById('default-address').value;
                        const totalAmount = document.getElementById('total-price').value;

                        if (!defaultAddress || !totalAmount) {
                            showToast('Missing address or amount', 'error');
                            return;
                        }

                        const response = await fetch('/create-razorpay-order', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                defaultAddress,
                                totalAmount,
                                retryOrderId
                            }),
                        });

                        const data = await response.json();

                        if (data.error) {
                            showToast(data.error, 'error');
                            return;
                        }
                        if (!data.key_id) {
                            console.error("Missing Razorpay key_id from backend response", data);
                            return;
                        }

                        const options = {
                            key: data.key_id,
                            amount: data.amount,
                            currency: data.currency,
                            order_id: data.order_id,
                            name: data.user?.name||'Blend',
                            description: `Retry Payment for Order ${retryOrderId}`,
                            handler: async function (response) {
                                try {
                                    const paymentResponse = await fetch('/payment-success', {
                                        method: 'POST',
                                        headers: { 'Content-Type': 'application/json' },
                                        body: JSON.stringify({
                                            razorpay_order_id: response.razorpay_order_id,
                                            razorpay_payment_id: response.razorpay_payment_id,
                                            razorpay_signature: response.razorpay_signature,
                                            retryOrderId
                                        }),
                                    });

                                    const paymentData = await paymentResponse.json();

                                    if (paymentData.error) {
                                        showToast(paymentData.error, 'error');
                                    } else {
                                        showToast('Payment successful', 'success');
                                        setTimeout(() => { window.location.reload(); }, 2000);
                                    }
                                } catch (error) {
                                    console.error('Payment Success Error:', error);
                                    showToast('Payment Success', 'success');
                                    setTimeout(() => {
                                        window.location.location = '/checkoutsuccess'
                                    }, 2000);
                                }
                            },
                            prefill: {
                                name: data.user?.name,
                                email: data.user?.email,
                                contact: data.user?.contact
                            },
                            theme: {
                                color: '#343a40'
                            }
                        };

                        const rzp = new Razorpay(options);
                        rzp.on('payment.failed', function (response) {
                            showToast(response.error.description || 'Payment failed', 'error');
                            window.location.href = '/checkoutfailure';
                        });
                        rzp.open();
                    } catch (error) {
                        console.error('Retry Payment Error:', error);
                        showToast('Failed to initiate payment', 'error');
                    }
                }
    </script>
</body>
</html>